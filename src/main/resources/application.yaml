#spring:
#  datasource:
#    url: jdbc:mysql://localhost:3306/test?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false
#    username: root
#    password: root
#    driver-class-name: com.mysql.cj.jdbc.Driver
#mybatis:
#  mapperLocations: classpath:dao/*Mapper.xml
#
#server:
#  port: 9008

server:
  port: 8082

spring:
    datasource:
        name: test
        url: jdbc:mysql://localhost:3306/test?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false
        username: root
        password: root
        # 使用druid数据源
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        filters: stat
        maxActive: 20
        initialSize: 1
        maxWait: 60000
        minIdle: 1
        timeBetweenEvictionRunsMillis: 60000
        minEvictableIdleTimeMillis: 300000
        validationQuery: select 'x'
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        poolPreparedStatements: true
        maxOpenPreparedStatements: 20
    mvc:
      view:
        prefix: /
        suffix: .jsp
      static-path-pattern: /**

#    kafka:
#        producer:
#          key-serializer: org.apache.kafka.common.serialization.StringSerializer
#          bootstrap-servers: 192.168.13.6:2181,192.168.13.1:2181,192.168.13.2:2181
#          value-serializer: org.apache.kafka.common.serialization.StringSerializer
#        consumer:
#          bootstrap-servers: 192.168.13.3:6667
#          group-id: group1
#          enable-auto-commit: true
#          auto-commit-interval: 100
#          max-poll-records: 1
#          key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#          value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#        listener:
#          concurrency: 5


#pagehelper分页插件
pagehelper:
    helperDialect: mysql
    reasonable: true
    supportMethodsArguments: true
    params: count=countSql

#mybatis:
#    mapper-locations: classpath:mapper/*.xml
#    type-aliases-package: com.springboot.demo.entity
#    global-config:
#        #数据库相关配置
#        db-config:
#          #主键类型  AUTO:"数据库ID自增", INPUT:"用户输入ID", ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
#          id-type: AUTO
#          #字段策略 IGNORED:"忽略判断",NOT_NULL:"非 NULL 判断"),NOT_EMPTY:"非空判断"
#          field-strategy: NOT_NULL
#          #驼峰下划线转换
#          column-underline: true
#          logic-delete-value: -1
#          logic-not-delete-value: 0
#        banner: false
#      #原生配置
#      configuration:
#        map-underscore-to-camel-case: true
#        cache-enabled: false
#        call-setters-on-nulls: true
#        jdbc-type-for-null: 'null'
mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.springboot.demo.entity

  ####### kafka

#  ### producer 配置
#  spring.kafka.producer.bootstrap-servers=192.168.13.6:2181,192.168.13.1:2181,192.168.13.2:2181
#  spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#  spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

  ### consumer 配置
#  spring.kafka.consumer.bootstrap-servers=192.168.13.3:6667
#  spring.kafka.consumer.group-id=anuoapp
#  spring.kafka.consumer.enable-auto-commit=true
#  spring.kafka.consumer.auto-commit-interval=100
#  spring.kafka.consumer.max-poll-records=1
#  spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#  spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#  spring.kafka.listener.concurrency=5

